{"version":3,"sources":["Components/slides/SliderObj.ts","locales/zh/messages.js","Components/editor/configuration.ts","Components/editor/components/ColorPicker.jsx","Components/editor/components/PagePanel.jsx","Components/editor/components/download.jsx","Components/settings.ts","Components/editor/Editor.tsx","Components/slider/Display.tsx","Components/pages/EditMode.jsx","Components/pages/DisplayMode.jsx","Components/tests/test.ts","App.js","serviceWorker.js","index.js"],"names":["imagePosition","Imageposition","textAlignment","PageContentMode","languageData","n","ord","messages","catalogs","zh","zhMessages","setupI18n","language","SliderObj","pages","this","at","newPage","push","page","image","undefined","text","splice","JSON","stringify","json","onSuccess","onError","obj","parse","map","err","positionConfig","i","left","right","top","center","alignConfig","ColorPicker","handleColorChange","color","event","setState","selectColor","hex","props","updateColor","state","showColorpicker","anchorEl","selectedColor","style","width","TextField","fullWidth","InputLabelProps","shrink","label","title","value","onFocus","e","currentTarget","onBlur","Popper","open","onChange","Component","initState","jsonConfig","imageSrc","imageFullscreen","useTextBackground","textPosition","contentText","titleText","textColor","shadow","shadowX","shadowY","shadowColor","backgroundColor","PagePanel","handleTextChange","target","id","getJSONFile","prev","index","pageContent","loadPageContent","isDownloaded","console","log","onLoadEnd","content","propsContent","src","fullscreen","position","background","useBackground","setTimeout","jsonObj","update","selectionList","onSelect","selected","FormControl","className","InputLabel","Select","s","MenuItem","key","FormControlLabel","control","Checkbox","checked","renderSelection","variant","multiline","rows","rowsMax","Collapse","in","type","Download","element","document","createElement","file","Blob","href","URL","createObjectURL","download","click","add","upload","Fab","bottom","zIndex","onClick","Menu","onClose","bind","getURL","path","Editor","slides","updateData","data","setPage","toJSONObj","changes","a","url","length","name","description","config_file","toJSON","pResponse","axios","post","patch","response","pk","message","addPage","pageNum","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Display","textShadow","showAnimation","style1","textAlign","style2","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","height","minHeight","renderText","EditMode","match","params","get","marginTop","MobileStepper","steps","activeStep","nextButton","Button","disabled","backButton","DisplayMode","anchors","afterLoad","origin","destination","direction","currentPage","configID","debug","fromJSON","navigation","navigationTooltips","autoScrolling","licenseKey","render","comp","Wrapper","App","mode","component","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.779c3502.chunk.js","sourcesContent":["import { t } from '@lingui/macro';\nimport { setupI18n } from '@lingui/core'\nimport zhMessages from \"../../locales/zh/messages\";\n\n\nconst catalogs = {\n  zh: zhMessages\n}\nconst lr = setupI18n({\n  language: \"zh\",\n  catalogs: catalogs\n})\n\n// export let imagePosition = {\n//   top : lr._(t`Top`),\n//   right : lr._(t`Right`),\n//   left: lr._(t`Left`),\n//   center: lr._(t`Center`)\n// }\n\nexport enum imagePosition {\n  top = \"Top\",\n  right = \"Right\",\n  left = \"Left\",\n  center = \"Center\"\n}\n\nenum Imageposition {\n  right = \"Right\",\n  left = \"Left\",\n  center = \"Center\"\n}\n\nexport enum textAlignment {\n  right = \"Right\",\n  left = \"Left\",\n  center = \"Center\"\n}\n\nexport enum PageContentMode {\n  edit = \"edit\",\n  display = \"display\"\n}\n\nexport interface Page {\n  image?: Image;\n  text?: Text;\n  backgroundColor?: string;\n}\n\nexport interface Image {\n  src: string;\n  fullscreen: boolean;\n  position?: Imageposition;\n}\n\nexport interface Text {\n  titleText: string;\n  textAlignment: any;\n  contentText: string;\n  position: string;\n  useBackground: boolean;\n  background?: string;\n  shadow: boolean;\n  shadowColor: string;\n  shadowX: number;\n  shadowY: number;\n  color?: string;\n}\n\nexport class SliderObj {\n  pages: Page[];\n\n  constructor() {\n    this.pages = [];\n  }\n\n  setPage(at: number, newPage: Page): SliderObj {\n    this.pages[at] = newPage;\n    return this;\n  }\n\n  addPage(newPage?: Page): SliderObj {\n    if (!newPage) {\n      let page: Page = {\n        image: undefined,\n        text: undefined\n      };\n      this.pages.push(page);\n    } else {\n      this.pages.push(newPage);\n    }\n    return this;\n  }\n\n  removePage(at: number): SliderObj {\n    this.pages.splice(at, 1);\n    return this;\n  }\n\n  toJSON(): string {\n    return JSON.stringify(this.pages);\n  }\n\n  toJSONObj(): Page[] {\n    return this.pages\n  }\n\n  fromJSON(\n    json: string,\n    onSuccess?: (pages: Page[]) => void,\n    onError?: (errMsg: string) => void\n  ) {\n    let obj: object[] = JSON.parse(json);\n    try {\n      this.pages = obj.map((page: Page) => {\n        return page;\n      });\n      if (onSuccess) {\n        onSuccess(this.pages);\n      }\n    } catch (err) {\n      if (onError) onError(err);\n    }\n  }\n}\n","/* eslint-disable */export default{languageData:{\"plurals\":function(n,ord){if(ord)return\"other\";return\"other\"}},messages:{\"Background\":\"\\u80CC\\u666F\",\"Background Color\":\"\\u80CC\\u666F\\u989C\\u8272\",\"Center\":\"\\u5C45\\u4E2D\",\"Content\":\"\\u5185\\u5BB9\",\"Download\":\"\\u4E0B\\u8F7D\",\"Find more\":\"\\u4E86\\u89E3\\u66F4\\u591A\",\"Image\":\"\\u7167\\u7247\",\"Image src\":\"\\u7167\\u7247\\u6765\\u6E90\",\"Left\":\"\\u5C45\\u5DE6\",\"Right\":\"\\u5C45\\u53F3\",\"Shadow\":\"\\u9634\\u5F71\",\"Shadow Color:\":\"\\u9634\\u5F71\\u989C\\u8272\",\"Shadow X\":\"\\u9634\\u5F71X\\u504F\\u79FB\",\"Shadow Y\":\"\\u9634\\u5F71Y\\u504F\\u79FB\",\"Text\":\"\\u6587\\u5B57\",\"Text Alignment\":\"\\u6587\\u5B57\\u5BF9\\u9F50\",\"Text Background Color\":\"\\u6587\\u5B57\\u80CC\\u666F\\u989C\\u8272\",\"Text Color:\":\"\\u6587\\u5B57\\u989C\\u8272\",\"Text Position\":\"\\u6587\\u5B57\\u4F4D\\u7F6E\",\"Title text\":\"\\u6807\\u9898\\u6587\\u5B57\",\"Top\":\"\\u5C45\\u4E0A\"}};","import { Image, Text, Page, imagePosition as i, textAlignment } from \"../slides/SliderObj\";\nimport { t } from \"@lingui/macro\";\nimport { setupI18n } from \"@lingui/core\";\nimport zhMessages from \"../../locales/zh/messages\";\n\nexport const positionConfig: string[] = [i.left, i.right, i.top, i.center];\nexport const alignConfig: string[] = [textAlignment.left, textAlignment.right, textAlignment.center];\n","import React, { Component } from \"react\";\nimport { TextField, Popper } from \"@material-ui/core\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { ChromePicker } from \"react-color\";\n\nexport default class ColorPicker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showColorpicker: false,\n      anchorEl: null,\n      selectedColor: \"\"\n    };\n  }\n\n  handleColorChange = (color, event) => {\n    this.setState({ selectColor: color.hex });\n    this.props.updateColor(color.hex);\n  };\n\n  render() {\n    return (\n      <div style={{ width: \"100%\" }}>\n        <TextField\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          label={this.props.title}\n          value={this.state.selectColor}\n          onFocus={e => {\n            this.setState({\n              anchorEl: e.currentTarget,\n              showColorpicker: true\n            });\n          }}\n          onBlur={() => {\n            this.setState({\n              anchorEl: null,\n              showColorpicker: false\n            });\n          }}\n        />\n        <Popper\n          open={this.state.showColorpicker}\n          anchorEl={this.state.anchorEl}\n        >\n          <ChromePicker\n            color={this.state.selectColor}\n            onChange={this.handleColorChange}\n          />\n        </Popper>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { imagePosition, textAlignment } from \"../../slides/SliderObj\";\nimport {\n  TextField,\n  Checkbox,\n  FormControlLabel,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Slide,\n  Collapse\n} from \"@material-ui/core\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { positionConfig, alignConfig } from \"../configuration\";\nimport ColorPicker from \"./ColorPicker\";\nimport { Trans } from \"@lingui/macro\";\n\nconst initState = {\n  jsonConfig: \"\",\n  imageSrc: \"\",\n  imageFullscreen: false,\n  imagePosition: imagePosition.center,\n  useTextBackground: false,\n  textPosition: imagePosition.center,\n  contentText: \"\",\n  titleText: \"\",\n  textColor: \"\",\n  textAlignment: textAlignment.left,\n  selectColor: \"\",\n  shadow: false,\n  shadowX: 0,\n  shadowY: 0,\n  shadowColor: \"#00000\",\n  backgroundColor: \"\"\n};\n\nexport default class PagePanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initState;\n  }\n\n  componentDidUpdate(prev) {\n    // switch page\n    if (this.props.index !== prev.index) {\n      if (\n        this.props.pageContent.image === undefined &&\n        this.props.pageContent.text === undefined\n      ) {\n        // When adding new page, clear all the old content\n        this.setState(initState);\n      } else {\n        this.loadPageContent();\n      }\n    } else if (this.props.isDownloaded) {\n      // Download new content from internent\n      if(this.props.pageContent){\n        console.log(\"Downloading new stuff\");\n        this.loadPageContent();\n        this.props.onLoadEnd()\n      }\n    }\n  }\n\n  loadPageContent() {\n    let content = JSON.parse(JSON.stringify(initState));\n    let propsContent = this.props.pageContent;\n\n    content.imageSrc = propsContent.image.src;\n    content.imageFullscreen = propsContent.image.fullscreen;\n    content.imagePosition = propsContent.image.position;\n\n    content.selectColor = propsContent.text.background;\n    content.titleText = propsContent.text.titleText;\n    content.contentText = propsContent.text.contentText;\n    content.textAlignment = propsContent.text.textAlignment;\n    content.textPosition = propsContent.text.position;\n    content.useTextBackground = propsContent.text.useBackground;\n    content.shadow = propsContent.text.shadow;\n    content.shadowX = propsContent.text.shadowX;\n    content.shadowY = propsContent.text.shadowY;\n    content.shadowColor = propsContent.text.shadowColor;\n    content.textAlignment = propsContent.text.textAlignment;\n    this.setState(content);\n  }\n\n  /**\n   * Return the json file for the current configuration\n   */\n  getJSONFile() {\n    // Important, because setstate would take some time.\n    setTimeout(() => {\n      let jsonObj = {\n        image: {\n          src: this.state.imageSrc,\n          fullscreen: this.state.imageFullscreen,\n          position: this.state.imagePosition\n        },\n        text: {\n          textAlignment: this.state.textAlignment,\n          titleText: this.state.titleText,\n          contentText: this.state.contentText,\n          useBackground: this.state.useTextBackground,\n          background: this.state.selectColor,\n          position: this.state.textPosition,\n          color: this.state.textColor,\n          shadow: this.state.shadow,\n          shadowColor: this.state.shadowColor,\n          shadowX: this.state.shadowX,\n          shadowY: this.state.shadowY\n        },\n        backgroundColor: this.state.backgroundColor\n      };\n      this.props.update(this.props.index, jsonObj);\n      this.setState({ jsonConfig: jsonObj });\n    }, 10);\n  }\n\n  handleTextChange = e => {\n    let id = e.target.id;\n    switch (id) {\n      case \"image-src\":\n        this.setState({ imageSrc: e.target.value });\n        break;\n      case \"title-text\":\n        this.setState({ titleText: e.target.value });\n        break;\n      case \"content-text\":\n        this.setState({ contentText: e.target.value });\n        break;\n      case \"shadow-x\":\n        this.setState({ shadowX: e.target.value });\n        break;\n      case \"shadow-y\":\n        this.setState({ shadowY: e.target.value });\n        break;\n      default:\n        break;\n    }\n    this.getJSONFile();\n  };\n\n  renderSelection(title, selectionList, onSelect, selected) {\n    return (\n      <FormControl className=\"col-5 mr-1\" fullWidth>\n        <InputLabel>{title}</InputLabel>\n        <Select value={selected} onChange={onSelect}>\n          {selectionList.map((s, i) => {\n            return (\n              <MenuItem key={i} value={s}>\n                {s}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container-fluid mb-1\">\n          {/* Image */}\n          <div className=\"row\">\n            <Trans>Image</Trans>\n          </div>\n          <div className=\"row\">\n            <TextField\n              fullWidth\n              id=\"image-src\"\n              value={this.state.imageSrc}\n              label={<Trans>Image src</Trans>}\n              onChange={this.handleTextChange}\n            />\n          </div>\n          <div className=\"row\">\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.imageFullscreen}\n                  onChange={e => {\n                    this.setState({ imageFullscreen: e.target.checked });\n                    this.getJSONFile();\n                  }}\n                />\n              }\n              label=\"fullscreen\"\n            />\n            {!this.state.imageFullscreen &&\n              this.renderSelection(\n                \"Image Position\",\n                positionConfig,\n                e => {\n                  this.setState({ imagePosition: e.target.value });\n                },\n                this.state.imagePosition\n              )}\n          </div>\n\n          {/* Text */}\n          <div className=\"row\">\n            <Trans>Text</Trans>\n          </div>\n          <div className=\"row\">\n            <TextField\n              fullWidth\n              value={this.state.titleText}\n              label={<Trans>Title text</Trans>}\n              id=\"title-text\"\n              onChange={this.handleTextChange}\n            />\n            <TextField\n              className=\"mt-3\"\n              variant=\"outlined\"\n              id=\"content-text\"\n              value={this.state.contentText}\n              onChange={this.handleTextChange}\n              fullWidth\n              label={<Trans>Content</Trans>}\n              multiline\n              rows={6}\n              rowsMax={6}\n            />\n          </div>\n          <div className=\"row\">\n            <div className=\"\">\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.useTextBackground}\n                    onChange={e => {\n                      this.setState({ useTextBackground: e.target.checked });\n                      this.getJSONFile();\n                    }}\n                  />\n                }\n                label={<Trans>Background</Trans>}\n              />\n            </div>\n            <div>\n              {this.state.useTextBackground && (\n                <ColorPicker\n                  title={<Trans>Text Background Color</Trans>}\n                  updateColor={color => {\n                    this.setState({ selectColor: color });\n                    this.getJSONFile();\n                  }}\n                />\n              )}\n            </div>\n          </div>\n          <div className=\"mt-1 mb-3 row\">\n            <ColorPicker\n              title={<Trans>Text Color:</Trans>}\n              updateColor={color => {\n                this.setState({ textColor: color });\n                this.getJSONFile();\n              }}\n            />\n          </div>\n          <div className=\"row\">\n            {this.renderSelection(\n              <Trans>Text Position</Trans>,\n              positionConfig,\n              e => {\n                this.setState({ textPosition: e.target.value });\n                this.getJSONFile();\n              },\n              this.state.textPosition\n            )}\n\n            {this.renderSelection(\n              <Trans>Text Alignment</Trans>,\n              alignConfig,\n              e => {\n                this.setState({ textAlignment: e.target.value });\n                this.getJSONFile();\n              },\n              this.state.textAlignment\n            )}\n          </div>\n          <div className=\"row\">\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.shadow}\n                  onChange={e => {\n                    this.setState({ shadow: e.target.checked });\n                    this.getJSONFile();\n                  }}\n                />\n              }\n              label={<Trans>Shadow</Trans>}\n            />\n          </div>\n          <Collapse in={this.state.shadow}>\n            <div className=\"row\">\n              <div className=\"col-4 pl-0\">\n                <TextField\n                  id=\"shadow-x\"\n                  type=\"number\"\n                  onChange={this.handleTextChange}\n                  label={<Trans>Shadow X</Trans>}\n                  value={this.state.shadowX}\n                />\n              </div>\n              <div className=\"col-4 pl-1\">\n                <TextField\n                  id=\"shadow-y\"\n                  type=\"number\"\n                  onChange={this.handleTextChange}\n                  label={<Trans>Shadow Y</Trans>}\n                  value={this.state.shadowY}\n                />\n              </div>\n              <div className=\"col-4\">\n                <ColorPicker\n                  title={<Trans>Shadow Color:</Trans>}\n                  updateColor={color => {\n                    this.setState({ shadowColor: color });\n                    this.getJSONFile();\n                  }}\n                />\n              </div>\n            </div>\n          </Collapse>\n          <div className=\"row mt-3\">\n            <Trans>Background</Trans>\n          </div>\n          <div className=\"row\">\n            <ColorPicker\n              title={<Trans>Background Color</Trans>}\n              updateColor={color => {\n                this.setState({ backgroundColor: color });\n                this.getJSONFile();\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport { Trans } from '@lingui/macro';\n\nexport default class Download extends Component {\n  constructor() {\n    super();\n    this.state = {\n      anchorEl: null\n    };\n  }\n\n  download() {\n    let element = document.createElement(\"a\");\n    let file = new Blob([\"\\ufeff\", JSON.stringify(this.props.text)], {\n      type: \"text/json;charset=utf-8\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = `config.json`;\n    element.click();\n    this.setState({ anchorEl: null });\n  }\n\n  add(){\n      this.props.add()\n      this.setState({ anchorEl: null });\n  }\n\n  upload(){\n    this.props.upload()\n  this.setState({ anchorEl: null });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <Fab \n          color=\"primary\"\n          style={{ position: \"fixed\", bottom: 40, right: 40, zIndex: 200 }}\n          onClick={e => {\n            this.setState({ anchorEl: e.target });\n          }}\n        >\n          <EditIcon />\n        </Fab>\n        <Menu\n          open={this.state.anchorEl !== null}\n          anchorEl={this.state.anchorEl}\n          style={{zIndex: 300}}\n          onClose={() => {\n            this.setState({ anchorEl: null });\n          }}\n        >\n          <MenuItem onClick={this.download.bind(this)}><Trans>Download</Trans></MenuItem>\n          <MenuItem onClick={this.add.bind(this)}><Trans>Add Page</Trans></MenuItem>\n          <MenuItem onClick={this.upload.bind(this)}><Trans>Upload</Trans></MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n}\n","export function getURL(path: string): string {\n    let testURL = \"http://0.0.0.0/slide\"\n    let production = \"https://sirileepage.com/custom_webpage\"\n    return `${testURL}/${path}`\n}","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { SliderObj, Page } from \"../slides/SliderObj\";\nimport PagePanel from \"./components/PagePanel\";\nimport Download from \"./components/download\";\nimport { getURL } from \"../settings\";\nimport { Snackbar } from \"@material-ui/core\";\nimport axios from \"axios\";\n\ninterface Props {\n  data: any;\n  id: any;\n  changes: number;\n  update(json: any): void;\n  isDownloaded: boolean;\n  onLoadEnd: any;\n  pageNum: number;\n}\n\ninterface State {\n  page: SliderObj;\n  data: Page[];\n  message: String;\n  changes: number;\n  id?: number;\n}\n\nexport default class Editor extends Component<Props, State> {\n  slides: SliderObj;\n\n  constructor(props: Props) {\n    super(props);\n    this.slides = new SliderObj();\n    this.state = {\n      page: this.slides,\n      data: [],\n      message: \"\",\n      changes: 0\n    };\n  }\n\n  componentDidMount() {\n    try {\n      let json = this.slides.toJSONObj();\n      this.props.update(json);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  componentDidUpdate(prev: Props) {\n    if (this.props.data !== prev.data && this.props.data.length > 0) {\n      this.slides.pages = this.props.data;\n      this.setState({ page: this.slides, id: this.props.id });\n    }\n  }\n\n  updateData = (i: number, data: any) => {\n    this.slides.setPage(i, data);\n    let json = this.slides.toJSONObj();\n    let changes = this.state.changes + 1;\n    if (changes > 10 && this.state.id !== null) {\n      this.upload();\n      changes = 0;\n    }\n    this.setState({ changes: changes, data: json });\n    this.setState({ data: json, page: this.slides, changes: changes });\n    this.props.update(json);\n  };\n\n  /*\n   * Upload the data to server\n   */\n  upload = async () => {\n    let url =\n      this.state.id === undefined\n        ? getURL(\"slide/\")\n        : getURL(`slide/${this.state.id}/`);\n    if (this.state.data.length === 0) return;\n\n    const { page } = this.state;\n    console.log(this.state.page.toJSONObj());\n    let data = {\n      name: page.pages[0].text && page.pages[0].text.titleText,\n      description:\n        this.slides.pages[0].text && this.slides.pages[0].text.contentText,\n      config_file: this.state.page.toJSON()\n    };\n\n    let pResponse =\n      this.state.id === undefined\n        ? axios.post(url, data)\n        : axios.patch(url, data);\n    let response = await pResponse;\n    this.setState({ id: response.data.pk, message: \"Saved\" });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"col-12\">\n          <Download\n            text={this.state.page.toJSONObj()}\n            add={() => {\n              this.slides.addPage();\n              this.setState({ page: this.slides });\n              let json = this.slides.toJSONObj();\n              this.props.update(json);\n            }}\n            upload={this.upload}\n          />\n          <PagePanel\n            isDownloaded={this.props.isDownloaded}\n            onLoadEnd={this.props.onLoadEnd}\n            pageContent={this.state.page.toJSONObj()[this.props.pageNum]}\n            index={this.props.pageNum}\n            update={this.updateData}\n          />\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            }}\n            open={this.state.message !== \"\"}\n            onClose={() => {\n              this.setState({ message: \"\" });\n            }}\n            autoHideDuration={3000}\n            message={<span>{this.state.message}</span>}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Page, imagePosition, Text } from \"../slides/SliderObj\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { positionConfig } from \"../editor/configuration\";\nimport \"animate.css/animate.css\";\nimport \"../../App.css\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Trans } from \"@lingui/macro\";\nimport { Fade, Collapse } from \"@material-ui/core\";\n\ninterface MyProps {\n  data: Page;\n  pageNum: number;\n  showAnimation: boolean;\n}\n\nexport default class Display extends Component<MyProps> {\n  constructor(props: MyProps) {\n    super(props);\n    this.state = {};\n  }\n\n  text = (text: Text) => {\n    let shadow = {\n      textShadow: `${text.shadowX}px ${text.shadowY}px 4px ${text.shadowColor}`\n    };\n    if (text.contentText !== \"\" || text.titleText !== \"\" && this.props.showAnimation) {\n      return (\n        <div className=\"animated fadeInUp\">\n          <h3 style={text.shadow ? shadow : {}}>{text.titleText}</h3>\n          <span style={text.shadow ? shadow : {}}>{text.contentText}</span>\n        </div>\n      );\n    }\n  };\n\n  renderText(position: string, text: Text) {\n    let style1 = {\n      textAlign: text.textAlignment,\n      backgroundColor: text.background,\n      color: text.color\n    };\n\n    let style2 = {\n      textAlign: text.textAlignment,\n      color: text.color\n    };\n    if (position === imagePosition.left) {\n      return (\n        <div\n          className=\"my-auto ml-0 mr-auto p-3\"\n          style={text.useBackground ? style1 : style2}\n        >\n          {this.text(text)}\n        </div>\n      );\n    } else if (position === imagePosition.right) {\n      return (\n        <div\n          className=\"my-auto ml-auto mr-0 p-3\"\n          style={text.useBackground ? style1 : style2}\n        >\n          {this.text(text)}\n        </div>\n      );\n    } else if (position === imagePosition.center) {\n      return (\n        <div\n          className=\"my-auto ml-auto mr-auto p-3\"\n          style={text.useBackground ? style1 : style2}\n        >\n          {this.text(text)}\n        </div>\n      );\n    } else if (position === imagePosition.top) {\n      return (\n        <div\n          className=\"ml-auto mr-auto p-3\"\n          style={{\n            textAlign: text.textAlignment,\n            backgroundColor: text.background,\n            color: text.color\n          }}\n        >\n          {this.text(text)}\n        </div>\n      );\n    }\n  }\n\n  render() {\n    let background =\n      this.props.data === null ? \"\" : this.props.data.backgroundColor;\n\n    let style1 = {\n      backgroundColor: background,\n      backgroundImage: `url(${\n        this.props.data.image ? this.props.data.image.src : \"\"\n      })`,\n      backgroundPosition: \"center center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      height: \"100%\",\n      minHeight: \"400px\",\n      width: \"100%\"\n    };\n\n    let style2 = {\n      backgroundColor: background,\n      height: \"100%\",\n      minHeight: \"400px\",\n      width: \"100%\"\n    };\n\n    return (\n      <div\n        className=\"row m-0\"\n        style={\n          this.props.data.image && this.props.data.image.fullscreen\n            ? style1\n            : style2\n        }\n      >\n        {this.props.data.text &&\n          this.renderText(this.props.data.text.position, this.props.data.text)}\n\n        {this.props.pageNum === 0 && (\n          <div className=\"row w-100 first-page-text\">\n            <div\n              className=\"animated fadeInUp slow ml-auto mr-auto\"\n              style={{ textShadow: \" 2px 2px 4px #fffff\" }}\n            >\n              <Trans>Find more</Trans>\n              <ExpandMoreIcon />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../../App.css\";\nimport Editor from \"../editor/Editor\";\nimport { MobileStepper, Button } from \"@material-ui/core\";\nimport Display from \"../slider/Display\";\nimport { getURL } from \"../settings\";\nimport axios from \"axios\"\n\nconst initState = {\n  data: [],\n  pageNum: 0,\n  id: \"\",\n  isDownloaded: false\n};\n\nexport default class EditMode extends Component {\n  constructor() {\n    super();\n    this.state = initState;\n  }\n\n  async componentDidMount() {\n    let id = this.props.match.params.id;\n    console.log(id);\n    if (id) {\n      let url = getURL(`slide/${id}`)\n      let response = await axios.get(url)\n      let data = response.data;\n      data = JSON.parse(data.config_file);\n      console.log(data);\n      this.setState({ data: data, id: id, isDownloaded: true });\n    }\n  }\n\n  update = data => {\n    this.setState({ data: data });\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\" style={{ marginTop: \"70px\" }}>\n        <div className=\"row\">\n          <MobileStepper\n            variant=\"dots\"\n            position=\"top\"\n            steps={this.state.data.length}\n            activeStep={this.state.pageNum}\n            nextButton={\n              <Button\n                disabled={this.state.pageNum + 1 >= this.state.data.length}\n                onClick={() => {\n                  this.setState({ pageNum: this.state.pageNum + 1 });\n                }}\n              >\n                Next\n              </Button>\n            }\n            backButton={\n              <Button\n                disabled={this.state.pageNum === 0}\n                onClick={() => {\n                  this.setState({ pageNum: this.state.pageNum - 1 });\n                }}\n              >\n                Prev\n              </Button>\n            }\n          />\n          <div className=\"col-md-6\">\n            <Editor\n              id={this.state.id}\n              data={this.state.data}\n              update={this.update}\n              pageNum={this.state.pageNum}\n              isDownloaded={this.state.isDownloaded}\n              onLoadEnd={() => {\n                this.setState({ isDownloaded: false });\n              }}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <Display\n              data={\n                this.state.data.length !== 0\n                  ? this.state.data[this.state.pageNum]\n                  : { image: null, text: null, backgroundColor: null }\n              }\n              pageNum={this.state.pageNum}\n              showAnimation={true}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { SliderObj } from \"../slides/SliderObj\";\nimport jsonOBJ from \"../tests/test\";\nimport Display from \"../slider/Display\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\nimport { getURL } from \"../settings\";\nimport axios from \"axios\";\n\nexport default class DisplayMode extends Component {\n  constructor() {\n    super();\n    this.slides = new SliderObj();\n    this.state = {\n      configID: null,\n      debug: false,\n      slides: this.slides,\n      currentPage: 0\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.debug === \"true\") {\n      this.slides.fromJSON(jsonOBJ);\n      this.setState({\n        configID: this.props.match.params.id,\n        debug: true,\n        slides: this.slides\n      });\n    } else {\n      let id = this.props.match.params.id;\n      let url = getURL(`slide/${id}/`);\n      let response = await axios.get(url);\n      let data = response.data;\n      data = JSON.parse(data.config_file);\n      this.slides.pages = data;\n      this.setState({ configID: id, slides: this.slides });\n    }\n  }\n\n  anchors = () => {\n    return this.slides.toJSONObj().map(page => page.text.titleText);\n  };\n\n  afterLoad = (origin, destination, direction) => {\n    this.setState({ currentPage: destination.index });\n  };\n\n  render() {\n    return (\n      <div id=\"fullpage\">\n        {this.state.slides.toJSONObj().length > 0 && (\n          <ReactFullpage\n            navigation\n            navigationTooltips={this.anchors()}\n            autoScrolling={true}\n            afterLoad={this.afterLoad}\n            licenseKey={\"84EEBD7A-BF7C47AE-9B82F7FB-2A272C8C\"}\n            render={comp => (\n              <ReactFullpage.Wrapper>\n                {this.state.slides.toJSONObj().map((page, i) => {\n                  return (\n                    <div key={i} className=\"section\">\n                      <Display\n                        data={page}\n                        pageNum={i}\n                        showAnimation={this.state.currentPage === i}\n                      />\n                    </div>\n                  );\n                })}\n              </ReactFullpage.Wrapper>\n            )}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import { SliderObj } from \"../slides/SliderObj\";\n\nlet json: string = `[\n    {\n      \"image\": {\n        \"src\": \"https://s3.amazonaws.com/sirilee-webpage-data/static/gallery/2019/01/02/bg0.jpg\",\n        \"fullscreen\": true,\n        \"position\": \"Center\"\n      },\n      \"text\": {\n        \"textAlignment\": \"Center\",\n        \"titleText\": \"这是第一张\",\n        \"contentText\": \"我是第一张\",\n        \"useBackground\": false,\n        \"background\": \"\",\n        \"position\": \"Center\",\n        \"color\": \"#ffffff\",\n        \"shadow\": true,\n        \"shadowColor\": \"#000000\",\n        \"shadowX\": \"2\",\n        \"shadowY\": \"2\"\n      },\n      \"backgroundColor\": \"\"\n    },\n    {\n      \"image\": {\n        \"src\": \"https://s3.amazonaws.com/sirilee-webpage-data/static/gallery/2019/01/02/bg0.jpg\",\n        \"fullscreen\": true,\n        \"position\": \"Center\"\n      },\n      \"text\": {\n        \"textAlignment\": \"Center\",\n        \"titleText\": \"这是第二张\",\n        \"contentText\": \"耶耶耶耶耶～～～～～\",\n        \"useBackground\": false,\n        \"background\": \"\",\n        \"position\": \"Center\",\n        \"color\": \"#ffffff\",\n        \"shadow\": false,\n        \"shadowColor\": \"#00000\",\n        \"shadowX\": 0,\n        \"shadowY\": 0\n      },\n      \"backgroundColor\": \"\"\n    },\n    {\n      \"image\": {\n        \"src\": \"https://s3.amazonaws.com/sirilee-webpage-data/static/gallery/2019/01/02/bg0.jpg\",\n        \"fullscreen\": true,\n        \"position\": \"Center\"\n      },\n      \"text\": {\n        \"textAlignment\": \"Center\",\n        \"titleText\": \"实在想不出第三张写啥了\",\n        \"contentText\": \"我是第三张\",\n        \"useBackground\": false,\n        \"background\": \"\",\n        \"position\": \"Center\",\n        \"color\": \"#ffffff\",\n        \"shadow\": false,\n        \"shadowColor\": \"#00000\",\n        \"shadowX\": 0,\n        \"shadowY\": 0\n      },\n      \"backgroundColor\": \"\"\n    }\n  ]\n  `\nexport default json","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, HashRouter,BrowserRouter, Switch } from \"react-router-dom\";\nimport EditMode from \"./Components/pages/EditMode.jsx\";\nimport DisplayMode from \"./Components/pages/DisplayMode\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mode: \"editor\",\n      data: [],\n      pageNum: 0\n    };\n  }\n\n  update = data => {\n    this.setState({ data: data });\n  };\n\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <Switch>\n            <Route path=\"/edit/:id?\" component={EditMode} />\n            <Route path=\"/:id/:debug?\" component={DisplayMode} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { I18nProvider } from \"@lingui/react\";\nimport zhMessages from \"./locales/zh/messages.js\"\n\n\nconst catalogs = {\n    zh: zhMessages\n}\n\nReactDOM.render(\n  <I18nProvider language=\"zh\" catalogs={catalogs} >\n    <App />\n  </I18nProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}